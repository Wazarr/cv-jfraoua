---
import ProjectLayout from "../../layouts/ProjectLayout.astro";
import Badge from "../../components/Badge.astro";
---

<ProjectLayout title="HaxballGym - AI Training Framework">
  <h1>HaxballGym AI Training Framework</h1>
  
  <div class="mb-6">
    <a
      href="https://github.com/HaxballGym"
      target="_blank"
      rel="noopener noreferrer"
      class="inline-flex items-center space-x-2 text-primary-400 hover:text-primary-300 font-mono font-semibold"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="w-5 h-5"
      >
        <path
          d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
        ></path>
      </svg>
      <span>â†’ github.com/HaxballGym</span>
    </a>
  </div>

  <h2>Overview</h2>

  <p>A comprehensive reinforcement learning framework for training AI agents to play <a href="https://www.haxball.com">Haxball</a>, a popular online 2D soccer game. This project demonstrates advanced RL techniques applied to a real-time competitive environment.</p>

  <p>The framework provides a complete ecosystem for developing and training AI agents, including a Python recreation of the game engine, OpenAI Gym environment with custom reward functions, and integration with state-of-the-art reinforcement learning algorithms.</p>

  <h2>AI Performance Demo</h2>

  <video controls width="600" class="w-full mb-4 rounded-lg shadow-lg border border-dark-600">
    <source src="/ai_vs_chaser.mov" type="video/mp4" />
    Your browser does not support the video tag.
  </video>

  <p><em>AI agent (red) defeating a simple chase bot 6-1, demonstrating game understanding and strategic play</em></p>

  <h2>Architecture Components</h2>

  <h3>Ursinaxball</h3>
  <p>Python recreation of Haxball using the Ursina game engine, reverse-engineered from deobfuscated JavaScript code of the original browser game.</p>

  <h3>HaxballGym Environment</h3>
  <p>Custom OpenAI Gym environment implementing:</p>
  <ul>
    <li><strong>State space</strong>: Player positions, velocities, ball state</li>
    <li><strong>Action space</strong>: Discrete movement and kick actions</li>
    <li><strong>Reward functions</strong>: Goal scoring, ball possession, positioning</li>
    <li><strong>Terminal conditions</strong>: Game completion, time limits</li>
  </ul>

  <h3>Training Pipeline</h3>
  <p>Integration with Stable-Baselines3 implementing PPO (Proximal Policy Optimization) for agent training with custom reward shaping.</p>

  <h3>WazBot Starter Kit</h3>
  <p>Quick-start repository with documentation and examples for training custom Haxball AI agents.</p>

  <h2>Technical Stack</h2>

  <ul>
    <li><strong>Python</strong> - Core implementation language</li>
    <li><strong>Ursina Engine</strong> - 3D game engine for physics simulation</li>
    <li><strong>OpenAI Gym</strong> - RL environment framework</li>
    <li><strong>Stable-Baselines3</strong> - RL algorithm implementation</li>
    <li><strong>PyTorch</strong> - Neural network backend</li>
  </ul>

  <h2>Key Challenges</h2>

  <h3>Game Engine Recreation</h3>
  <p>Deobfuscating and understanding the original JavaScript physics engine required extensive reverse engineering. Converting to Python while maintaining gameplay fidelity posed significant architectural challenges.</p>

  <h3>Reward Engineering</h3>
  <p>Designing reward functions that encourage realistic soccer behavior without reward hacking. Balancing exploration vs exploitation in the competitive game environment.</p>

  <h3>Training Stability</h3>
  <p>Achieving consistent training performance across different opponents and scenarios while preventing overfitting to specific game situations.</p>

  <h2>Performance Results</h2>

  <p>The best-performing model (trained for 1 week) achieves:</p>
  <ul>
    <li><strong>Consistent wins</strong> against beginner-level players</li>
    <li><strong>Strong defensive positioning</strong> and ball interception</li>
    <li><strong>Basic tactical understanding</strong> of game flow</li>
    <li><strong>Limitations</strong>: Struggles with precision shots and advanced techniques</li>
  </ul>

  <p>Current performance suggests potential to challenge intermediate players with more diverse training scenarios.</p>

  <h2>Community Impact</h2>

  <p>The framework has attracted interest from academic researchers and students, with several universities incorporating it into reinforcement learning coursework. The open-source nature has enabled collaborative improvements and extensions.</p>
</ProjectLayout>
