---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";
import Badge from "../../components/Badge.astro";
import { tagCategories } from "../../content/config";

const posts: CollectionEntry<"blog">[] = await getCollection("blog");
posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<Layout title="Blog">
  <main class="flex-1">
    <section id="blog" class="w-full py-8 md:py-12 lg:py-16">
      <div class="container px-4 md:px-6">
        <h2 class="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl">
          Blog
        </h2>
        <p
          class="mt-4 text-gray-500 md:text-lg/relaxed lg:text-base/relaxed xl:text-lg/relaxed dark:text-gray-400 w-3/4"
        >
          Explore my thoughts and insights on various topics related to data
          science, AI, and web technologies.
        </p>
        <div id="posts" class="mt-8">
          {
            posts.map((post) => (
              <div class="mb-8 bg-white dark:bg-gray-800 shadow-lg rounded-lg overflow-hidden">
                <a href={`/blog/${post.slug}/`} class="block p-6">
                  <div class="flex flex-row items-baseline">
                    <h3 class="text-2xl font-semibold pr-2 text-gray-800 dark:text-white hover:text-blue-600 dark:hover:text-blue-400">
                      {post.data.title}
                    </h3>
                    <span class="text-gray-500 italic">
                      {post.data.pubDate.toLocaleDateString()}
                    </span>
                  </div>
                  <p class="mt-2 text-gray-700 dark:text-gray-300">
                    {post.data.description}
                  </p>
                  <div class="flex flex-row flex-wrap gap-2 items-baseline mt-4">
                    <p class="font-mono text-sm text-slate-600 pl-2">Tags:</p>
                    <div class="flex flex-wrap gap-1">
                      {post.data.tags
                        ?.filter((tag) => tagCategories.includes(tag as any))
                        .map((tag) => (
                          <Badge>{tag}</Badge>
                        ))}
                    </div>
                  </div>
                </a>
              </div>
            ))
          }
        </div>
      </div>
    </section>
  </main>
</Layout>
